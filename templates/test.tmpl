func Test_{{.Name}}Type(t *testing.T) {

	type object struct {
		Type {{.Name}} `json:"type"`
	}

	tests := []struct {
		name     string
		arg      object
		expected {{.Name}}
	}{
		{{range $i, $e := .Enums}}{{"{"}}{{"\n"}}			name: "Should match {{$e}} marshal and unmarshal",{{"\n"}}			arg: object{{"{"}}{{"\n"}}				Type: {{$e}},{{"\n"}}			},{{"\n"}}			expected: {{$e}},{{"\n"}}		},{{"\n"}}		{{end}}
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			b, err := json.Marshal(tt.arg)
			assert.NoError(t, err)

			var obj object
			assert.NoError(t, json.Unmarshal(b, &obj))
			assert.Equal(t, tt.expected, obj.Type)
		})
	}
}
